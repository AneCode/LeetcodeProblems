/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>ans;
        stack<int>s1;
        stack<TreeNode*>s2;
        if(root==NULL)
        return ans;
        if(root)
        s2.push(root);
       while(s2.empty()==false){
         TreeNode* node=s2.top();
         s2.pop();
         s1.push(node->val);
         if(node and node->left)
         s2.push(node->left);
         if(node and node->right)
         s2.push(node->right);
       } 
       while(!s1.empty()){
           ans.push_back(s1.top());
           s1.pop();
       }
     return ans;   
    }
};
