/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode*>s;
        if(root ==NULL)
        return ans;
          s.push(root);
          TreeNode *node=root;
        while (true){
          if(node==NULL && s.empty()==false){
             node=s.top();
             s.pop();
             if(node!=NULL)
             ans.push_back(node->val);
             if(node and node->right!=NULL){
                 s.push(node->right);
             }
             if(node!=NULL)
             node=node->right; 
          }
         else if(s.empty()==true and node==NULL)
          break;
          else{
             s.push(node->left);
             node=node->left;   
          }
        }
        return ans;
    }
};
