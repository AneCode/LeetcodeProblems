class Solution {
public:
    vector<int> postorderTraversal(TreeNode* cur) {
       vector<int>in,post,pre;
       if(cur==NULL)
       return post;
       int count=1;
       stack<pair<TreeNode*,int>>s;
       s.push({cur,count});
       while(s.empty()==false){
         pair<TreeNode*,int>temp=s.top();
         s.pop();
          if(temp.second==1){
          pre.push_back(temp.first->val);
          s.push({temp.first,++(temp.second)});
          if(temp.first->left!=NULL){
              s.push({temp.first->left,1});
          }   
         }else if(temp.second==2){
            in.push_back(temp.first->val);
          s.push({temp.first,++(temp.second)});
          if(temp.first->right!=NULL){
              s.push({temp.first->right,1});
          } 
         } 
         else{
            post.push_back(temp.first->val);
         } 
       }
       return post;
    }
};
